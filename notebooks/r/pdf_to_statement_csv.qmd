---
title: "PDF to statement CSV"
author: "Raphael Merz"
format: html
editor: visual
---

# PDF to statement CSV

## 0 Preparation

### Load packages

```{r}
#| message: false
# install.packages("devtools") 
# devtools::install_github("scienceverse/papercheck")
library(papercheck)
library(tidyverse)
```

## 1 Configuration

```{r}
paper_path <- "papers" # path to folder with pdfs that should be converted

data_path <- "papers/data.csv" # path to where the final csv with unlabeled statements should be stored
```

## 2 Convert PDF to XML

```{r}
pdf2grobid(paper_path, save_path = xml_path)
```

## 3 Extract nonsig statements from papers

```{r}
# read xml files in 'paper_path'
papers <- read_grobid(paper_path)

# extract all sentences with p values
p <- module_run(papers, "all_p_values")

# Keep only nonsignificant p  value statements
nonsig_statement <- p$table[p$table$p_value > 0.05, ]

# Extend text to the full sentence
nonsig_statement <- expand_text(nonsig_statement, paper = papers, expand_to = "sentence", plus = 0, minus = 0)

# Exclude duplicates
nonsig_statement <- nonsig_statement[!duplicated(nonsig_statement$expanded),]

# Only include statements with 'results' or 'discussion' as the header
nonsig_statement <- nonsig_statement[tolower(nonsig_statement$header) %in% c("results", "discussion"), ]

View(nonsig_statement)
```

## 4 Save statement file

```{r}
# save file as csv
write.csv(nonsig_statement, file = data_path, row.names = F)
```
