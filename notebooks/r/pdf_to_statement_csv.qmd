---
title: "PDF to statement CSV"
author: "Raphael Merz"
format: html
editor: visual
---

# PDF to statement CSV

## 0 Preparation

### Load packages

```{r}
#| message: false
# install.packages("devtools") 
# devtools::install_github("scienceverse/papercheck")
library(papercheck)
library(tidyverse)
```

## 1 Configuration

```{r}
paper_path <- "../../data/validation_data/papers" # path to folder with pdfs that should be converted; also saves xml files there

data_path <- "../../data/validation_data/papers/paper_statements_unlabeled.csv" # path to where the final csv with unlabeled statements from pdfs should be stored
```

## 2 Convert PDF to XML

```{r}
pdf2grobid(paper_path, save_path = paper_path)
```

## 3 Extract nonsig statements from papers

```{r}
# read xml files in 'paper_path'
papers <- read_grobid(paper_path)

# extract all sentences with p values
p_values <- module_run(papers, "all_p_values")

# Keep only nonsignificant p  value statements
nonsig_p_values <- p_values$table[p_values$table$p_value > 0.05, ]

# Extend text to the full sentence
nonsig_p_statements <- expand_text(nonsig_p_values, paper = papers, expand_to = "sentence", plus = 0, minus = 0)

# Exclude duplicates
nonsig_p_statements <- nonsig_p_statements[!duplicated(nonsig_p_statements$expanded),]

# Only include statements with 'results' or 'discussion' as the header
nonsig_p_statements <- nonsig_p_statements[tolower(nonsig_p_statements$header) %in% c("results", "discussion"), ]

# View dataset
View(nonsig_p_statements)
```

## 4 Save statement file

```{r}
# save file as csv
write.csv(nonsig_p_statements, file = data_path, row.names = F)
```
